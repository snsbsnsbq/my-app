{"version":3,"sources":["assets/images/preloader.gif","Components/Profile/MyPosts/Post/Post.module.css","Components/Navbar/Navbar.module.css","Components/News/News.module.css","Components/Music/Music.module.css","Components/Settings/Settings.module.css","Components/Navbar/Navbar.jsx","Components/News/News.jsx","Components/Music/Music.jsx","Components/Settings/Settings.jsx","api/api.js","redux/users-reducer.js","Components/Common/Paginator/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","Components/Common/Preloader/Preloader.jsx","redux/users-selectors.js","Components/Users/UsersContainer.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileStatus.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","redux/sidebar-reducer.js","redux/store.js","redux/profile-reducer.js","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","redux/app-reducer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","utils/validators/validatos.js","Components/Common/FormsControls/FormsControls.module.css","Components/Common/FormsControls/FormsControls.js","redux/dialogs-reducer.js","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","hoc/withAuthRedirect.js","Components/Users/users.module.css","assets/images/user.png","Components/Common/Paginator/Paginator.module.css","Components/Header/Header.module.css"],"names":["module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","News","props","Music","Settings","instance","axios","baseURL","withCredentials","headers","userAPI","currentPage","pageSize","get","then","response","data","userId","post","delete","profileAPI","status","put","authAPI","email","password","rememberMe","initialState","users","newPostText","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","setTotalUsersCount","count","toggleIsFetching","toggleFollowingProgress","isFollowing","usersReducer","state","action","map","u","id","followed","filter","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","selectedPage","e","User","user","unfollow","follow","key","src","photos","small","userimg","userPhoto","disabled","some","name","Users","Preloader","preloader","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersConatainer","pageNumber","this","React","Component","compose","connect","dispatch","a","resultCode","page","items","totalCount","Post","message","like","maxLength100","maxLengthCreator","MyPosts","memo","console","log","createRef","postsElements","posts","likes","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","postsBlock","values","addPost","newPostElement","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","content","large","fullName","descriptionBlock","sidebarReducer","store","_state","profilePage","dialogsPages","dialogs","messages","newMessageText","sidebar","_callSubscriber","getState","subscribe","observer","profileReducer","dialogsReducer","window","newPost","postId","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","authorisedUserId","history","getUserProfile","getStatus","withAuthRedirect","auth","isAuth","withRouter","Header","header","loginBlock","login","logout","usersId","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","maxLength30","LoginReduxForm","Input","error","style","formSummaryError","length","stopSubmit","_error","formData","initialized","appReducer","DialogsContainer","lazy","App","initializeApp","path","render","Suspense","fallback","UsersContainer","app","Boolean","location","hostname","reducers","combineReducers","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","maxLength","hasError","meta","touched","formControl","input","newMessageElement","sendMessageActionCreator","stateCopy","newMessage","mapStateToPropsForRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.62cf6907.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.80c89a71.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1PeGH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__353xA\",\"item\":\"Navbar_item__21qpO\",\"activeLink\":\"Navbar_activeLink__1e1eL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"News_content__1eVMK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Music_content__3cdIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Settings_content__39ZgD\"};","import React from 'react';\nimport s from './Navbar.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to=\"/profile\" activeClassName={s.activeLink} >Profile </NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from \"react\";\r\nimport s from './News.module.css';\r\nconst News = (props) => {\r\n    return (\r\n        <div >\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\nimport s from './Music.module.css';\r\nconst Music = (props) => {\r\n    return (\r\n        <div >\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\nimport s from './Settings.module.css';\r\nconst Settings = (props) => {\r\n    return (\r\n        <div >\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create( {\r\n    baseURL:'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {'API-KEY': 'ad689c1a-fc4b-4a61-a704-2f407e9687f3'}\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers (currentPage, pageSize)  {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,\r\n        ).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n     postFollow  (userId)  {\r\n        return instance.post(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    deleteUnfollow (userId)  {\r\n        return instance.delete(`follow/${userId}`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n\r\n    getProfile (userId) {\r\n        return instance.get(`profile/` + userId).then(response => {\r\n            return response.data})\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile (userId) {\r\n        return instance.get(`profile/` + userId).then(response => {\r\n            return response.data})\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status});\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    getMe() {\r\n        return instance.get(`auth/me`).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(response => {\r\n\r\n            return response.data\r\n\r\n        })\r\n    }\r\n\r\n}","import {userAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW-POST';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CORRENT_PAGE = 'SET_CORRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [/*\r\n        {\r\n            id: 1,\r\n            photoUrl: 'https://cdn.britannica.com/73/194473-050-57F49709/Dmitry-Medvedev-2016.jpg',\r\n            followed: true,\r\n            fullName: \"Dmity\",\r\n            status: \"I am a boss of It kamasutra\",\r\n            location: {city: 'Minsk', country: 'Belarus'}\r\n        },\r\n        {\r\n            id: 2,\r\n            photoUrl: 'https://cdn.britannica.com/73/194473-050-57F49709/Dmitry-Medvedev-2016.jpg',\r\n            followed: true,\r\n            fullName: \"Denis\",\r\n            status: \"I am a student of It kamasutra\",\r\n            location: {city: 'Omsk', country: 'Russian Federation'}\r\n        },\r\n        {\r\n            id: 3,\r\n            photoUrl: 'https://cdn.britannica.com/73/194473-050-57F49709/Dmitry-Medvedev-2016.jpg',\r\n            followed: true,\r\n            fullName: \"Maks\",\r\n            status: \"I am Maks\",\r\n            location: {city: 'Moscow', country: 'Russian Federation'}\r\n        },\r\n        {\r\n            id: 4,\r\n            photoUrl: 'https://cdn.britannica.com/73/194473-050-57F49709/Dmitry-Medvedev-2016.jpg',\r\n            followed: false,\r\n            fullName: \"Pidor\",\r\n            status: \"I am a pidoras\",\r\n            location: {city: 'Amsterdam', country: 'Netherlands'}\r\n        }*/\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CORRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            /* debugger*/\r\n            return {\r\n                ...state, followingInProgress: action.isFollowing\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n\r\n    return {\r\n        type: FOLLOW, userId\r\n    }\r\n}\r\nexport const unfollowSuccess = (userId) => {\r\n\r\n    return {\r\n        type: UNFOLLOW, userId\r\n    }\r\n}\r\nexport const setUsers = (users) => {\r\n\r\n    return {\r\n        type: SET_USERS, users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n\r\n    return {\r\n        type: SET_CORRENT_PAGE, currentPage\r\n\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT, count: totalUsersCount\r\n    }\r\n}\r\nexport const toggleIsFetching = (isFetching) => {\r\n\r\n    return {\r\n        type: TOGGLE_IS_FETCHING, isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgress = (isFollowing, userId) => {\r\n\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS, isFollowing, userId\r\n    }\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n\r\n        let data = await userAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n        if (page != 1) {\r\n            dispatch(setCurrentPage(page))\r\n        } else if (page === 1) {\r\n            dispatch(setCurrentPage(page))\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let data = await userAPI.postFollow(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(followSuccess(userId))\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        }\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let data = await userAPI.deleteUnfollow(userId)\r\n        if (data.resultCode === 0) {\r\n            dispatch(unfollowSuccess(userId))\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        }\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\n\r\nconst Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize=10}) => {\r\n    pageSize = 20;\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    let portionCount = Math.ceil(pagesCount/portionSize)\r\n    let[portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber-1)*portionSize+1;\r\n    let rightPortionPageNumber = (portionNumber*portionSize)\r\n    return <div className={styles.paginator}>\r\n        {portionNumber>2 &&\r\n        <button onClick={()=>{setPortionNumber(1)}}>First page</button>\r\n        }\r\n        {portionNumber>1 &&\r\n        <button onClick={()=>{setPortionNumber(portionNumber-1)}}>Prev</button>\r\n        }\r\n        {pages.filter(p => p>=leftPortionPageNumber && p<= rightPortionPageNumber).map((p) => {\r\n            return (<span className={currentPage === p && styles.selectedPage}\r\n                          onClick={(e) => {\r\n                              onPageChanged(p)\r\n                          }}>{p}\r\n                   </span>)\r\n        })}\r\n        {portionCount>portionNumber &&\r\n            <button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</button>}\r\n        {portionCount>portionNumber &&\r\n        <button onClick={()=>{setPortionNumber(portionCount)}}>Last page</button>}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userimg from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userAPI} from \"../../api/api\";\r\nimport {toggleFollowingProgress} from \"../../redux/users-reducer\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\n    return <div key={user.id}>\r\n           <span>\r\n              <div>\r\n                  <NavLink to={'/profile/' + user.id}>\r\n                  <img src={user.photos.small != null ? user.photos.small : userimg} className={styles.userPhoto}/>\r\n                  </NavLink>\r\n              </div>\r\n              <div>\r\n\r\n                  {user.followed\r\n                      ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                          unfollow(user.id);\r\n                      }}>Unfollow</button>\r\n                      : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                          follow(user.id);\r\n                      }}>Follow </button>}\r\n              </div>\r\n          </span>\r\n        <span>\r\n                 <span>\r\n                     <div>{user.name}</div><div>{user.status}</div>\r\n                 </span>\r\n                <span>\r\n                    <div>{\"u.location.country\"}</div><div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n    </div>\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userimg from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport * as axios from \"axios\";\r\nimport {userAPI} from \"../../api/api\";\r\nimport {toggleFollowingProgress} from \"../../redux/users-reducer\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = (props) => {\r\n    /*let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }*/\r\n    return (<div>\r\n        {/*<div>\r\n            {pages.map(p => {\r\n                   return (<span className={props.currentPage === p && styles.selectedPage}\r\n                              onClick={(e) => {\r\n                                  props.onPageChanged(p)\r\n                                  debugger\r\n                              }}>{p}\r\n\r\n                   </span>)\r\n\r\n            })}\r\n\r\n        </div>*/}\r\n        <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged} totalUsersCount = {props.totalUsersCount} pageSize ={props.pageSize} />\r\n\r\n        {props.users.map(u => <User user={u} followingInProgress={props.followingInProgress} key={u.id} unfollow={props.unfollow} follow={props.follow}/>)}\r\n        </div>)}\r\n\r\n        /*<div key={u.id}>\r\n          <span>\r\n              <div>\r\n                  <NavLink to={'/profile/' + u.id}>\r\n                  <img src={u.photos.small != null ? u.photos.small : userimg} className={styles.userPhoto}/>\r\n                  </NavLink>\r\n              </div>\r\n              <div>\r\n\r\n                  {u.followed\r\n                      ? <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                          props.unfollow(u.id);\r\n                          }}>Unfollow</button>\r\n                      : <button disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                          props.follow(u.id);\r\n                          }}>Follow </button>}\r\n              </div>\r\n          </span>\r\n            <span>\r\n                 <span>\r\n                     <div>{u.name}</div><div>{u.status}</div>\r\n                 </span>\r\n                <span>\r\n                    <div>{\"u.location.country\"}</div><div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n        }</div>\r\n\r\n\r\n}*/\r\nexport default Users","import preloader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u=>true)\r\n} )\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setUsers,\r\n    unfollow,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    toggleIsFetching, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\n\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersConatainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        /*this.props.toggleIsFetching(true)\r\n        userAPI.requestUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n            this.props.setTotalUsersCount(data.totalCount)\r\n        })*/\r\n        this.props.getUsers(this.props.setCurrentPage, this.props.pageSize );\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize );\r\n       /* this.props.toggleIsFetching(true)\r\n        this.props.setCurrentPage(pageNumber);\r\n        /!*axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)*!/\r\n        userAPI.requestUsers(pageNumber, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false)\r\n            this.props.setUsers(data.items)\r\n        })*/\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n\r\n\r\n            />\r\n\r\n        </>\r\n\r\n    }\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n\r\n    }\r\n}*/\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n    }\r\n}\r\nexport default compose (/*withAuthRedirect,*/\r\n    connect(mapStateToProps,{follow, unfollow, setCurrentPage, setTotalUsersCount,\r\n            toggleFollowingProgress, getUsers: requestUsers})\r\n    )(UsersConatainer)\r\n\r\n\r\n/*\r\nlet withRedirect = withAuthRedirect(UsersConatainer);\r\n\r\n\r\n\r\n\r\nexport default withAuthRedirect (connect(mapStateToProps,\r\n    {   follow,\r\n        unfollow,\r\n        /!*setUsers,*!/\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        /!*toggleIsFetching,*!/\r\n        toggleFollowingProgress,\r\n        requestUsers\r\n    })\r\n(withRedirect)\r\n)*/\r\n","import React from 'react';\nimport s from './Post.module.css';\n\nconst Post = (props) => {\n    return <div className={s.item}>\n        <div>\n            <img src='https://upload.wikimedia.org/wikipedia/ru/thumb/4/4b/Avatar-2009.jpg/200px-Avatar-2009.jpg' />\n            {props.message}\n            </div >\n        <div>\n            <span> Like {props.like} </span> \n        </div>\n    </div>\n}\n\nexport default Post; ","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validatos\";\nimport {Textarea} from \"../../Common/FormsControls/FormsControls\";\n\nconst maxLength100 = maxLengthCreator(100);\n\nconst MyPosts = React.memo(props => {\n    console.log(\"RENDER yo\")\n    let newPostElement = React.createRef();\n    let postsElements = props.posts.map(p => <Post message={p.message} like={p.likes}/>)\n    let onAddPost = (values) => {\n        props.addPost(values.newPostElement)\n    };\n\n\n    const AddPostForm = (props) => {\n        return (\n            <form onSubmit={props.handleSubmit}>\n                <div>\n                    <Field component={Textarea} name='newPostElement' placeholder={'Enter your post '}\n                           validate={[required, maxLength100]}/>\n                    <div>\n                        <button>Add post</button>\n                    </div>\n\n                </div>\n            </form>\n        )\n    }\n    const AddPostFormRedux = reduxForm({form: \"ProfileAddPostElement\"})(AddPostForm)\n    return <div className={s.postsBlock}>\n        <h3>My posts</h3>\n        <div className={s.item}>\n            {/*<div>\n                <textarea onChange={onPostChange} ref={newPostElement} value={props.newPostText}/>\n            </div>\n            <div>\n                <button onClick={onAddPost}> Add Post</button>\n            </div>*/}\n            <AddPostFormRedux onSubmit={onAddPost}/>\n        </div>\n        <div className={s.posts}>\n\n            {postsElements}\n        </div>\n\n\n    </div>\n})\n\nexport default MyPosts;","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n        let[editMode,setEditMode ]= useState(false);\r\n        let[status, setStatus ]= useState(props.status);\r\n        useEffect(()=>{\r\n            setStatus(props.status)\r\n        }, [props.status])\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () =>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick ={activateEditMode}>{props.status || \"____\"} </span>\r\n                </div>}\r\n                {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus ={true} onBlur={deactivateEditMode} value={status}></input>\r\n                </div>}\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n               console.log(this.state.editMode)\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    deactivateEditMode= () =>{\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState(\r\n            {\r\n                status: e.currentTarget.value\r\n            }\r\n        )\r\n    }\r\ncomponentDidUpdate(prevPops, prevState) {\r\n        if (prevPops.status !== this.props.status){\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    console.log('componentDidUpdate')\r\n}\r\n\r\n    render() {\r\n        console.log('render')\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"____\"}</span>\r\n                </div>}\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}></input>\r\n                </div>}\r\n            </div>\r\n        )\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    return <div className={s.content}>\r\n        <div>\r\n            <img src='https://openimagedenoise.github.io/images/moana_16spp_oidn.jpg'/>\r\n        </div>\r\n        <div >\r\n            <img src={props.profile.photos.large }/>\r\n        </div>\r\n        <div>\r\n            {props.profile.fullName}\r\n        </div>\r\n        <div className={s.descriptionBlock}>\r\n\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","\r\nlet initialState = {};\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default sidebarReducer","/*import {rerenderEntireTree} from \"../render\";*/\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                {id: 1, message: \"Hi, how are you?\", likes: \"11\"},\r\n                {id: 2, message: \"Its my first post\", likes: '12'}\r\n            ],\r\n            newPostText: 'it-kamasutra.com'\r\n        },\r\n        dialogsPages: {\r\n            dialogs: [{id: 1, name: \"Dimych\"},\r\n                {id: 2, name: \"Andrey\"},\r\n                {id: 3, name: \"Sveta\"},\r\n                {id: 4, name: \"Sasha\"},\r\n                {id: 5, name: \"Viktor\"},\r\n                {id: 6, name: \"Valera\"}\r\n            ],\r\n            messages: [{id: 1, message: \"Hi\"},\r\n                {id: 2, message: \"How is you it-kamasutra?\"},\r\n                {id: 3, message: \"You\"},\r\n                {id: 4, message: \"You\"},\r\n                {id: 5, message: \"You\"},\r\n                {id: 6, message: \"You\"}],\r\n\r\n            newMessageText: 'write new message'\r\n        },\r\n        sidebar: {}\r\n    },\r\n    _callSubscriber() {\r\n        console.log('State changed')\r\n    },\r\n    getState() {\r\n        return this._state\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer\r\n    },\r\n\r\n    dispatch(action) {\r\n\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPages = dialogsReducer(this._state.dialogsPages, action);\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action);\r\n\r\n        this._callSubscriber(this._state);\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default store;\r\nwindow.store = store;","import store from \"./store\";\r\nimport {profileAPI, userAPI} from \"../api/api\";\r\nimport {toggleFollowingProgress, unfollowSuccess} from \"./users-reducer\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n/*const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';*/\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likes: \"11\"},\r\n        {id: 2, message: \"Its my first post\", likes: '12'}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    if (action.type === ADD_POST) {\r\n        let newPost = {\r\n            id: 3,\r\n            message: action.newPostElement,\r\n            likes: 0\r\n        }\r\n        return  {...state, posts: [...state.posts, newPost]}\r\n    } /*else if (action.type === UPDATE_NEW_POST_TEXT) {\r\n        return  {...state, newPostText: action.newText}}*/\r\n    else if (action.type === SET_USER_PROFILE) {\r\n        return  {...state, profile: action.profile}}\r\n    else if (action.type === SET_STATUS) {\r\n        return  {...state, status: action.status}}\r\n    else if (action.type === DELETE_POST) {\r\n        return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n    }\r\n        else\r\n            return {...state}\r\n}\r\n\r\nexport const addPostActionCreator = (newPostElement) => {\r\n\r\n    return {\r\n        type: ADD_POST, newPostElement\r\n    }\r\n}\r\n/*export const updateNewPostTextActionCreator = (text) => {\r\n\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT, newText: text\r\n    }\r\n}*/\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE, profile: profile\r\n    }\r\n}\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        userAPI.getProfile(userId).then(data => {\r\n            dispatch(setUserProfile(data))\r\n        })\r\n    }\r\n}\r\nexport const setStatus = (status) => {\r\n\r\n    return {\r\n        type: SET_STATUS, status: status\r\n    }\r\n}\r\nexport const getStatus = (userId) => {\r\n\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(data => {\r\n            dispatch(setStatus(data.data))\r\n        })\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status))\r\n            }\r\n            })\r\n\r\n    }\r\n}\r\nexport const deletePost = (postId) => {\r\n\r\n    return {\r\n        type: DELETE_POST, postId: postId\r\n    }\r\n}\r\nexport default profileReducer;","import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {onMessageChangeActionCreator, sendMessageActionCreator} from \"../../../redux/dialogs-reducer\";\n\n\n/*const MyPostsContainer = (props) => {\n\n\n    return (\n        <StoreContext.Consumer>\n            {(store) => {\n            let state = store.getState();\n            let addPost = () => {\n                store.dispatch(addPostActionCreator());\n            };\n            let onPostChange = (text) => {\n                let action = updateNewPostTextActionCreator(text);\n                store.dispatch(action);\n            }\n\n            return (\n            <MyPosts updateNewPostText={onPostChange}\n                     addPost={addPost}\n                     posts={state.profilePage.posts}\n                     newPostText={state.profilePage.newPostText}/>)}\n        }\n        </StoreContext.Consumer>\n    )\n}*/\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostElement) => {\n            dispatch(addPostActionCreator(newPostElement))\n        }\n        /*updateNewPostText: (text) => {\n            let action = (updateNewPostTextActionCreator(text));\n            dispatch(action);\n        }*/\n\n    }\n}\n\nconst MyPostsContainer= connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return <div>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorisedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n\r\n    }\r\n}\r\n let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n     status: state.profilePage.status,\r\n    authorisedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n export default compose(\r\n     connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n     withRouter,\r\n     /*withAuthRedirect*/\r\n ) (ProfileContainer)\r\n\r\n\r\n/*\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);*/\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://upload.wikimedia.org/wikipedia/commons/3/36/McDonald%27s_Golden_Arches.svg' />\r\n        <div className={s.loginBlock}>\r\n\r\n            {props.isAuth ? <div>{props.login} <button onClick={props.logout}>Log out</button></div> :\r\n            <NavLink to = {'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {toggleFollowingProgress, unfollowSuccess} from \"./users-reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\n\r\nlet initialState = {\r\n    usersId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.getMe()\r\n        if (response.resultCode === 0) {\r\n            let {id, email, login} = response.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe, isAuth) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe)\r\n            if (response.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                let action = stopSubmit('login', {_error: message});\r\n                dispatch(action)\r\n            }\r\n\r\n    }\r\n}\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        authAPI.logout().then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n\r\n            }\r\n        })\r\n    }\r\n}\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUserData, logout, setAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n      render() {\r\n\r\n        return <Header {...this.props} />\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect (mapStateToProps,{setAuthUserData, logout}) (HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validatos\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from './../Common/FormsControls/FormsControls.module.css'\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field  name = {'email'} component={Input} placeholder={\"Email\"} validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <Field  name={'password'} component={Input} placeholder={\"Password\"} type={\"password\"} validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'} component={Input} type={\"checkbox\"} validate={[required]}/> remember me\r\n            </div>\r\n            <div>\r\n                {props.error && <div className={style.formSummaryError}>{props.error}</div>}\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({\r\nform: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit=(formData)=>{\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"profile\"}/>\r\n    }\r\n    return <div>\r\n\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state)=> (\r\n    {isAuth: state.auth.isAuth}\r\n)\r\nexport default connect (mapStateToProps, {login} )(Login);","import {authAPI} from \"../api/api\";\r\nimport {toggleFollowingProgress, unfollowSuccess} from \"./users-reducer\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\n\r\nconst INITIALIZED_SUCCES = 'INITIALIZED_SUCCES';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n\r\n\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCES:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccses = (h) => ({type: INITIALIZED_SUCCES})\r\n\r\nexport const initializeApp = () =>(dispatch)=> {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n            dispatch(initializedSuccses())\r\n        }\r\n    )\r\n}\r\nexport default appReducer;","import React, {Component} from 'react';\nimport './App.css';\n\nimport Navbar from './Components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport News from \"./Components/News/News\";\nimport Music from \"./Components/Music/Music\";\nimport Settings from \"./Components/Settings/Settings\";\n//import DialogsContainer from \"./Components/Dialogs/DialogsContainer\";\n\nimport UsersContainer from \"./Components/Users/UsersContainer\";\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport Login from \"./Components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, logout, setAuthUserData} from \"./redux/auth-reducer\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./Components/Common/Preloader/Preloader\";\nconst DialogsContainer = React.lazy(() => import('./Components/Dialogs/DialogsContainer'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized){\n            return <Preloader/>\n        }\nelse\n        return (\n\n                <div className='app-wrapper'>\n                    <HeaderContainer/>\n                    <Navbar/>\n                    <div className='app-wrapper-content'>\n                        <Route path='/dialogs' render={() => { return <React.Suspense fallback={<div> loading</div>}><DialogsContainer/> </React.Suspense>}}/>\n                        <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                        <Route path='/login' render={() => <Login/>}/>\n                        <Route path='/users' render={() => <UsersContainer/>}/>\n                        <Route path='/news' component={News}/>\n                        <Route path='/music' component={Music}/>\n                        <Route path='/settings' component={Settings}/>\n\n\n                    </div>\n                </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized : state.app.initialized\n})\nexport default compose (withRouter,\n    connect(mapStateToProps,{initializeApp})) (App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPages: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app : appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n/*let store = createStore(reducers, applyMiddleware(thunkMiddleware));*/\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\n\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n/*rerenderEntireTree(store.getState());\n\nstore.subscribe(() => {\n    let state = store.getState()\n        rerenderEntireTree(state)});*/\n\n\nserviceWorker.unregister();\n","export const required = value => {\r\n   if (!!value) return undefined\r\n\r\n    else  return 'Field is required'\r\n}\r\n\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value && value.length>maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n    else  return undefined\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3zEBE\",\"error\":\"FormsControls_error__2U-uz\",\"formSummaryError\":\"FormsControls_formSummaryError__XR7Hf\"};","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: \"\") }>\r\n            <div>\r\n                { <textarea {...props.input} />}\r\n            </div>\r\n            {hasError && <span>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: \"\") }>\r\n            <div>\r\n                { <input {...input} {...props} />}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n/*export const Input = (props) => {\r\n    const hasError = props.meta.touched && props.meta.error;\r\n    return(\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error: \"\") }>\r\n            <div>\r\n                { <input {...props.input}  />}\r\n            </div>\r\n            {hasError && <span>{props.meta.error}</span>}\r\n        </div>\r\n    )\r\n}*/\r\n","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n/*const UPDATE_NEW_MESSAGE = 'UPDATE-NEW-MESSAGE';*/\r\n\r\nlet initialState = {\r\n    dialogs: [{id: 1, name: \"Dimych\"},\r\n        {id: 2, name: \"Andrey\"},\r\n        {id: 3, name: \"Sveta\"},\r\n        {id: 4, name: \"Sasha\"},\r\n        {id: 5, name: \"Viktor\"},\r\n        {id: 6, name: \"Valera\"}\r\n    ],\r\n    messages: [{id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How is you it-kamasutra?\"},\r\n        {id: 3, message: \"You\"},\r\n        {id: 4, message: \"You\"},\r\n        {id: 5, message: \"You\"},\r\n        {id: 6, message: \"You\"}],\r\n\r\n    newMessageElement: 'write new message'\r\n\r\n}\r\n\r\nconst dialogsReducer = (state =initialState , action) => {\r\n\r\n    let stateCopy = {...state};\r\n\r\n    /*if (action.type === SEND_MESSAGE) {\r\n        let newMessage = {\r\n            id: 7,\r\n            message: state.newMessageText,\r\n        };\r\n        stateCopy.messages = [...state.messages];\r\n\r\n        stateCopy.messages.push(newMessage);\r\n        stateCopy.newMessageText = ('');\r\n\r\n         }\r\n    else if (action.type === UPDATE_NEW_MESSAGE) {\r\n         stateCopy.newMessageText = action.newText;\r\n\r\n    }\r\n*/\r\n\r\n    if (action.type === SEND_MESSAGE){\r\n        let newMessage = action.newMessageElement;\r\n        stateCopy = {...state, messages: [...state.messages,{id:7, message:newMessage}]}\r\n    }\r\n\r\n    /*else if (action.type === UPDATE_NEW_MESSAGE) {\r\n        stateCopy = {...state, newMessageText: action.newText }\r\n    }*/\r\n\r\nreturn stateCopy;\r\n}\r\nexport const sendMessageActionCreator = (newMessageElement) => {\r\n\r\n    return {\r\n        type: SEND_MESSAGE, newMessageElement\r\n    }\r\n}\r\n/*export const onMessageChangeActionCreator = (text) => {\r\n\r\n    return {\r\n        type: UPDATE_NEW_MESSAGE, newText: text\r\n    }\r\n}*/\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__15vpJ\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1Chp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1bTmH\",\"posts\":\"MyPosts_posts__1Dg8p\"};","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n        return <Component {...this.props} />\r\n    }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3us8j\",\"selectedPage\":\"users_selectedPage__OXjq2\"};","module.exports = __webpack_public_path__ + \"static/media/user.f8a15e74.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__31Sqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1rWAU\",\"loginBlock\":\"Header_loginBlock__26VEe\"};"],"sourceRoot":""}